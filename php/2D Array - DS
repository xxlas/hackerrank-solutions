/*
    Given a 6x6 2D Array, arr:

    1 1 1 0 0 0
    0 1 0 0 0 0
    1 1 1 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    We define an hourglass in A to be a subset of values with indices falling in this pattern in arr's graphical representation:

    a b c
      d
    e f g

    There are 16  hourglasses in arr, and an hourglass sum is the sum of an hourglass' values. Calculate the hourglass sum for every hourglass in arr,
    then print the maximum hourglass sum.
    
    https://www.hackerrank.com/challenges/2d-array/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=arrays
*/

function hourglassSum($arr) {
    $sum_arr = [];
    for($i = 0; $i < sizeof($arr); $i++) {
        for($j = 0; $j < sizeof($arr[0]); $j++){
            if($i + 3 > sizeof($arr) || $j + 3 > sizeof($arr[0])){
                continue; //check if hourglass can be formed
            }
            $c = [];
            array_push($c,
            $arr[$i][$j], $arr[$i][$j+1], $arr[$i][$j+2], 
            $arr[$i+1][$j+1],
            $arr[$i+2][$j], $arr[$i+2][$j+1], $arr[$i+2][$j+2]);
            $sum_arr[] = array_sum($c);
        }
    }
    rsort($sum_arr);
    return $sum_arr[0];
}
